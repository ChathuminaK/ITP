{"ast":null,"code":"export const register = async ({\n  fName,\n  lName,\n  username,\n  email,\n  contact,\n  password\n} = {}) => {\n  const admin = {\n    fName,\n    lName,\n    username,\n    email,\n    contact,\n    password\n  };\n  try {\n    const res = await fetch(`${process.env.REACT_APP_API_URL}/register`, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(admin)\n    });\n    return await res.json();\n  } catch (err) {\n    throw new Error(`Cannot register at the moment. ${err}`);\n  }\n};\nexport const login = async ({\n  username,\n  email,\n  password\n} = {}) => {\n  const admin = {\n    username,\n    email,\n    password\n  };\n  try {\n    const res = await fetch(`${process.env.REACT_APP_API_URL}/login`, {\n      method: \"POST\",\n      credentials: \"include\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(admin)\n    });\n    return await res.json();\n  } catch (err) {\n    throw new Error(`Cannot login at the moment. ${err}`);\n  }\n};\nexport const logout = async () => {\n  try {\n    const res = await fetch(`${process.env.REACT_APP_API_URL}/logout`, {\n      method: \"GET\",\n      credentials: \"include\"\n    });\n    return await res.json();\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const getLoggedInAdmin = async () => {\n  try {\n    const res = await fetch(`${process.env.REACT_APP_API_URL}/admin`, {\n      method: \"GET\",\n      credentials: \"include\"\n    });\n    if (!res.ok) {\n      throw new Error(\"Failed to fetch logged-in admin\");\n    }\n    return await res.json();\n  } catch (err) {\n    throw new Error(\"Please login to continue\");\n  }\n};\nexport const adminById = async adminID => {\n  try {\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/admin/${adminID}`);\n    if (!response.ok) {\n      throw new Error('Failed to fetch admin details');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    throw new Error('Failed to fetch admin details');\n  }\n};\nexport const view = async () => {\n  try {\n    const res = await fetch(`${process.env.REACT_APP_API_URL}/view`, {\n      method: \"GET\",\n      credentials: \"include\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (!res.ok) {\n      throw new Error(\"Failed to fetch admins\");\n    }\n    return await res.json();\n  } catch (err) {\n    throw new Error(`Cannot fetch admins. ${err}`);\n  }\n};\nexport const deleteAdmin = async adminID => {\n  try {\n    const res = await fetch(`${process.env.REACT_APP_API_URL}/admin/${adminID}`, {\n      method: \"DELETE\",\n      headers: {\n        Accept: \"application/json\"\n      }\n    });\n    if (!res.ok) {\n      throw new Error(\"Failed to delete admin account\");\n    }\n    return await res.json();\n  } catch (error) {\n    throw new Error(`Cannot delete admin account: ${error}`);\n  }\n};\nexport const update = async (adminID, updatedAdminData) => {\n  try {\n    const res = await fetch(`${process.env.REACT_APP_API_URL}/admin/${adminID}`, {\n      method: 'PUT',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updatedAdminData)\n    });\n    if (!res.ok) {\n      throw new Error('Failed to update admin details');\n    }\n    return await res.json();\n  } catch (error) {\n    throw new Error(`Cannot update admin details: ${error}`);\n  }\n};","map":{"version":3,"names":["register","fName","lName","username","email","contact","password","admin","res","fetch","process","env","REACT_APP_API_URL","method","headers","Accept","body","JSON","stringify","json","err","Error","login","credentials","logout","console","log","getLoggedInAdmin","ok","adminById","adminID","response","data","error","view","deleteAdmin","update","updatedAdminData"],"sources":["C:/Users/Pahan/main/client/src/Components/Daily Process Dashboard/api/admin.js"],"sourcesContent":["export const register = async ({ fName, lName, username, email, contact, password } = {}) => {\r\n    const admin = { fName, lName, username, email, contact, password };\r\n\r\n    try{\r\n        const res = await fetch(`${process.env.REACT_APP_API_URL}/register`, {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(admin),\r\n        });\r\n\r\n        return await res.json();\r\n\r\n    }catch(err){\r\n        throw new Error(`Cannot register at the moment. ${err}`);\r\n\r\n    }\r\n};\r\n\r\nexport const login = async ({ username, email, password } = {}) => {\r\n    const admin = { username, email, password };\r\n\r\n    try{\r\n        const res = await fetch(`${process.env.REACT_APP_API_URL}/login`, {\r\n            method: \"POST\",\r\n            credentials: \"include\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(admin),\r\n        });\r\n\r\n        return await res.json();\r\n\r\n    }catch(err){\r\n        throw new Error(`Cannot login at the moment. ${err}`);\r\n\r\n    }\r\n};\r\n\r\nexport const logout = async () => {\r\n    try{\r\n        const res = await fetch(`${process.env.REACT_APP_API_URL}/logout`, {\r\n            method: \"GET\",\r\n            credentials: \"include\",\r\n        });\r\n\r\n        return await res.json();\r\n\r\n    }catch(err){\r\n        console.log(err);\r\n\r\n    }\r\n};\r\n\r\nexport const getLoggedInAdmin = async () => {\r\n    try{\r\n        const res = await fetch(`${process.env.REACT_APP_API_URL}/admin`, {\r\n            method: \"GET\",\r\n            credentials: \"include\",\r\n        });\r\n\r\n        if (!res.ok) {\r\n            throw new Error(\"Failed to fetch logged-in admin\");\r\n        }\r\n\r\n        return await res.json();\r\n\r\n    }catch(err){\r\n        throw new Error(\"Please login to continue\");\r\n \r\n    }\r\n};\r\n\r\nexport const adminById = async (adminID) => {\r\n    try {\r\n        const response = await fetch(`${process.env.REACT_APP_API_URL}/admin/${adminID}`);\r\n        if (!response.ok) {\r\n            throw new Error('Failed to fetch admin details');\r\n        }\r\n        const data = await response.json();\r\n        return data;\r\n    } catch (error) {\r\n        throw new Error('Failed to fetch admin details');\r\n    }\r\n};\r\n\r\nexport const view = async () => {\r\n    try {\r\n        const res = await fetch(`${process.env.REACT_APP_API_URL}/view`, {\r\n            method: \"GET\",\r\n            credentials: \"include\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n        });\r\n\r\n        if (!res.ok) {\r\n            throw new Error(\"Failed to fetch admins\");\r\n        }\r\n\r\n        return await res.json();\r\n    } catch (err) {\r\n        throw new Error(`Cannot fetch admins. ${err}`);\r\n    }\r\n};\r\n\r\nexport const deleteAdmin = async (adminID) => {\r\n    try {\r\n        const res = await fetch(`${process.env.REACT_APP_API_URL}/admin/${adminID}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                Accept: \"application/json\",\r\n            },\r\n        });\r\n\r\n        if (!res.ok) {\r\n            throw new Error(\"Failed to delete admin account\");\r\n        }\r\n\r\n        return await res.json();\r\n    } catch (error) {\r\n        throw new Error(`Cannot delete admin account: ${error}`);\r\n    }\r\n};\r\n\r\nexport const update = async (adminID, updatedAdminData) => {\r\n    try {\r\n        const res = await fetch(`${process.env.REACT_APP_API_URL}/admin/${adminID}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(updatedAdminData),\r\n        });\r\n\r\n        if (!res.ok) {\r\n            throw new Error('Failed to update admin details');\r\n        }\r\n\r\n        return await res.json();\r\n    } catch (error) {\r\n        throw new Error(`Cannot update admin details: ${error}`);\r\n    }\r\n};"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,MAAAA,CAAO;EAAEC,KAAK;EAAEC,KAAK;EAAEC,QAAQ;EAAEC,KAAK;EAAEC,OAAO;EAAEC;AAAS,CAAC,GAAG,CAAC,CAAC,KAAK;EACzF,MAAMC,KAAK,GAAG;IAAEN,KAAK;IAAEC,KAAK;IAAEC,QAAQ;IAAEC,KAAK;IAAEC,OAAO;IAAEC;EAAS,CAAC;EAElE,IAAG;IACC,MAAME,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,iBAAkB,WAAU,EAAE;MACjEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACLC,MAAM,EAAE,kBAAkB;QAC1B,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACX,KAAK;IAC9B,CAAC,CAAC;IAEF,OAAO,MAAMC,GAAG,CAACW,IAAI,CAAC,CAAC;EAE3B,CAAC,QAAMC,GAAG,EAAC;IACP,MAAM,IAAIC,KAAK,CAAE,kCAAiCD,GAAI,EAAC,CAAC;EAE5D;AACJ,CAAC;AAED,OAAO,MAAME,KAAK,GAAG,MAAAA,CAAO;EAAEnB,QAAQ;EAAEC,KAAK;EAAEE;AAAS,CAAC,GAAG,CAAC,CAAC,KAAK;EAC/D,MAAMC,KAAK,GAAG;IAAEJ,QAAQ;IAAEC,KAAK;IAAEE;EAAS,CAAC;EAE3C,IAAG;IACC,MAAME,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,iBAAkB,QAAO,EAAE;MAC9DC,MAAM,EAAE,MAAM;MACdU,WAAW,EAAE,SAAS;MACtBT,OAAO,EAAE;QACLC,MAAM,EAAE,kBAAkB;QAC1B,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACX,KAAK;IAC9B,CAAC,CAAC;IAEF,OAAO,MAAMC,GAAG,CAACW,IAAI,CAAC,CAAC;EAE3B,CAAC,QAAMC,GAAG,EAAC;IACP,MAAM,IAAIC,KAAK,CAAE,+BAA8BD,GAAI,EAAC,CAAC;EAEzD;AACJ,CAAC;AAED,OAAO,MAAMI,MAAM,GAAG,MAAAA,CAAA,KAAY;EAC9B,IAAG;IACC,MAAMhB,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,iBAAkB,SAAQ,EAAE;MAC/DC,MAAM,EAAE,KAAK;MACbU,WAAW,EAAE;IACjB,CAAC,CAAC;IAEF,OAAO,MAAMf,GAAG,CAACW,IAAI,CAAC,CAAC;EAE3B,CAAC,QAAMC,GAAG,EAAC;IACPK,OAAO,CAACC,GAAG,CAACN,GAAG,CAAC;EAEpB;AACJ,CAAC;AAED,OAAO,MAAMO,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EACxC,IAAG;IACC,MAAMnB,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,iBAAkB,QAAO,EAAE;MAC9DC,MAAM,EAAE,KAAK;MACbU,WAAW,EAAE;IACjB,CAAC,CAAC;IAEF,IAAI,CAACf,GAAG,CAACoB,EAAE,EAAE;MACT,MAAM,IAAIP,KAAK,CAAC,iCAAiC,CAAC;IACtD;IAEA,OAAO,MAAMb,GAAG,CAACW,IAAI,CAAC,CAAC;EAE3B,CAAC,QAAMC,GAAG,EAAC;IACP,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;EAE/C;AACJ,CAAC;AAED,OAAO,MAAMQ,SAAS,GAAG,MAAOC,OAAO,IAAK;EACxC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMtB,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,iBAAkB,UAASkB,OAAQ,EAAC,CAAC;IACjF,IAAI,CAACC,QAAQ,CAACH,EAAE,EAAE;MACd,MAAM,IAAIP,KAAK,CAAC,+BAA+B,CAAC;IACpD;IACA,MAAMW,IAAI,GAAG,MAAMD,QAAQ,CAACZ,IAAI,CAAC,CAAC;IAClC,OAAOa,IAAI;EACf,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAM,IAAIZ,KAAK,CAAC,+BAA+B,CAAC;EACpD;AACJ,CAAC;AAED,OAAO,MAAMa,IAAI,GAAG,MAAAA,CAAA,KAAY;EAC5B,IAAI;IACA,MAAM1B,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,iBAAkB,OAAM,EAAE;MAC7DC,MAAM,EAAE,KAAK;MACbU,WAAW,EAAE,SAAS;MACtBT,OAAO,EAAE;QACLC,MAAM,EAAE,kBAAkB;QAC1B,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC;IAEF,IAAI,CAACP,GAAG,CAACoB,EAAE,EAAE;MACT,MAAM,IAAIP,KAAK,CAAC,wBAAwB,CAAC;IAC7C;IAEA,OAAO,MAAMb,GAAG,CAACW,IAAI,CAAC,CAAC;EAC3B,CAAC,CAAC,OAAOC,GAAG,EAAE;IACV,MAAM,IAAIC,KAAK,CAAE,wBAAuBD,GAAI,EAAC,CAAC;EAClD;AACJ,CAAC;AAED,OAAO,MAAMe,WAAW,GAAG,MAAOL,OAAO,IAAK;EAC1C,IAAI;IACA,MAAMtB,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,iBAAkB,UAASkB,OAAQ,EAAC,EAAE;MACzEjB,MAAM,EAAE,QAAQ;MAChBC,OAAO,EAAE;QACLC,MAAM,EAAE;MACZ;IACJ,CAAC,CAAC;IAEF,IAAI,CAACP,GAAG,CAACoB,EAAE,EAAE;MACT,MAAM,IAAIP,KAAK,CAAC,gCAAgC,CAAC;IACrD;IAEA,OAAO,MAAMb,GAAG,CAACW,IAAI,CAAC,CAAC;EAC3B,CAAC,CAAC,OAAOc,KAAK,EAAE;IACZ,MAAM,IAAIZ,KAAK,CAAE,gCAA+BY,KAAM,EAAC,CAAC;EAC5D;AACJ,CAAC;AAED,OAAO,MAAMG,MAAM,GAAG,MAAAA,CAAON,OAAO,EAAEO,gBAAgB,KAAK;EACvD,IAAI;IACA,MAAM7B,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,iBAAkB,UAASkB,OAAQ,EAAC,EAAE;MACzEjB,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACLC,MAAM,EAAE,kBAAkB;QAC1B,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACmB,gBAAgB;IACzC,CAAC,CAAC;IAEF,IAAI,CAAC7B,GAAG,CAACoB,EAAE,EAAE;MACT,MAAM,IAAIP,KAAK,CAAC,gCAAgC,CAAC;IACrD;IAEA,OAAO,MAAMb,GAAG,CAACW,IAAI,CAAC,CAAC;EAC3B,CAAC,CAAC,OAAOc,KAAK,EAAE;IACZ,MAAM,IAAIZ,KAAK,CAAE,gCAA+BY,KAAM,EAAC,CAAC;EAC5D;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}