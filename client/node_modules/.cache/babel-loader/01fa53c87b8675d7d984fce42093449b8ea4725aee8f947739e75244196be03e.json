{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pahan\\\\my-project-app\\\\client1\\\\src\\\\components\\\\EditQuestion.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useFetchQuestion } from '../hooks/FetchQuestion';\nimport { updateResult } from '../hooks/setResult';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Questions({\n  onChecked\n}) {\n  _s();\n  const [checked] = useState(undefined);\n  const {\n    trace\n  } = useSelector(state => state.questions);\n  const [{\n    isLoading,\n    serverError\n  }] = useFetchQuestion();\n  const questions = useSelector(state => state.questions.queue);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(updateResult({\n      trace,\n      checked\n    }));\n  }, [checked, dispatch, trace]);\n  function handleInputChange(index, e) {\n    const {\n      name,\n      value\n    } = e.target;\n    const updatedQuestions = [...questions];\n    updatedQuestions[index][name] = value;\n    dispatch(updateResult({\n      trace,\n      checked\n    }));\n  }\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"h3\", {\n    className: \"text-light\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 27\n  }, this);\n  if (serverError) return /*#__PURE__*/_jsxDEV(\"h3\", {\n    className: \"text-light\",\n    children: serverError.message || \"Unknown Error\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 29\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"questions\",\n    children: questions.map((q, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-light\",\n        children: [\"Question \", index + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: q.question,\n        name: `question${index}`,\n        onChange: e => handleInputChange(index, e),\n        placeholder: \"Enter question\",\n        className: \"question-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: q.options.map((option, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: option,\n            name: `option${index}-${i}`,\n            onChange: e => handleInputChange(index, e),\n            placeholder: `Enter option ${i + 1}`,\n            className: \"option-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 33\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_s(Questions, \"J6hfbNhF6ynPwv9Pc3QaNZBAlic=\", false, function () {\n  return [useSelector, useFetchQuestion, useSelector, useDispatch];\n});\n_c = Questions;\nvar _c;\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","useFetchQuestion","updateResult","jsxDEV","_jsxDEV","Questions","onChecked","_s","checked","undefined","trace","state","questions","isLoading","serverError","queue","dispatch","handleInputChange","index","e","name","value","target","updatedQuestions","className","children","fileName","_jsxFileName","lineNumber","columnNumber","message","map","q","type","question","onChange","placeholder","options","option","i","_c","$RefreshReg$"],"sources":["C:/Users/Pahan/my-project-app/client1/src/components/EditQuestion.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useFetchQuestion } from '../hooks/FetchQuestion';\r\nimport { updateResult } from '../hooks/setResult';\r\n\r\nexport default function Questions({ onChecked }) {\r\n    const [checked] = useState(undefined);\r\n    const { trace } = useSelector(state => state.questions);\r\n    const [{ isLoading, serverError }] = useFetchQuestion();\r\n    const questions = useSelector(state => state.questions.queue);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(updateResult({ trace, checked }));\r\n    }, [checked, dispatch, trace]);\r\n\r\n    function handleInputChange(index, e) {\r\n        const { name, value } = e.target;\r\n        const updatedQuestions = [...questions];\r\n        updatedQuestions[index][name] = value;\r\n        dispatch(updateResult({ trace, checked }));\r\n    }\r\n\r\n    if (isLoading) return <h3 className='text-light'>Loading...</h3>;\r\n    if (serverError) return <h3 className='text-light'>{serverError.message || \"Unknown Error\"}</h3>;\r\n\r\n    return (\r\n        <div className='questions'>\r\n            {questions.map((q, index) => (\r\n                <div key={index} className=\"question-container\">\r\n                    <h2 className='text-light'>Question {index + 1}</h2>\r\n                    <input \r\n                        type=\"text\" \r\n                        value={q.question} \r\n                        name={`question${index}`} \r\n                        onChange={(e) => handleInputChange(index, e)} \r\n                        placeholder=\"Enter question\" \r\n                        className=\"question-input\" \r\n                    />\r\n                    <ul>\r\n                        {q.options.map((option, i) => (\r\n                            <li key={i}>\r\n                                <input \r\n                                    type=\"text\"\r\n                                    value={option}\r\n                                    name={`option${index}-${i}`}\r\n                                    onChange={(e) => handleInputChange(index, e)}\r\n                                    placeholder={`Enter option ${i + 1}`}\r\n                                    className=\"option-input\"\r\n                                />\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,gBAAgB,QAAQ,wBAAwB;AACzD,SAASC,YAAY,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,eAAe,SAASC,SAASA,CAAC;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EAC7C,MAAM,CAACC,OAAO,CAAC,GAAGV,QAAQ,CAACW,SAAS,CAAC;EACrC,MAAM;IAAEC;EAAM,CAAC,GAAGV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,SAAS,CAAC;EACvD,MAAM,CAAC;IAAEC,SAAS;IAAEC;EAAY,CAAC,CAAC,GAAGb,gBAAgB,CAAC,CAAC;EACvD,MAAMW,SAAS,GAAGZ,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,SAAS,CAACG,KAAK,CAAC;EAE7D,MAAMC,QAAQ,GAAGjB,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACZmB,QAAQ,CAACd,YAAY,CAAC;MAAEQ,KAAK;MAAEF;IAAQ,CAAC,CAAC,CAAC;EAC9C,CAAC,EAAE,CAACA,OAAO,EAAEQ,QAAQ,EAAEN,KAAK,CAAC,CAAC;EAE9B,SAASO,iBAAiBA,CAACC,KAAK,EAAEC,CAAC,EAAE;IACjC,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChC,MAAMC,gBAAgB,GAAG,CAAC,GAAGX,SAAS,CAAC;IACvCW,gBAAgB,CAACL,KAAK,CAAC,CAACE,IAAI,CAAC,GAAGC,KAAK;IACrCL,QAAQ,CAACd,YAAY,CAAC;MAAEQ,KAAK;MAAEF;IAAQ,CAAC,CAAC,CAAC;EAC9C;EAEA,IAAIK,SAAS,EAAE,oBAAOT,OAAA;IAAIoB,SAAS,EAAC,YAAY;IAAAC,QAAA,EAAC;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAChE,IAAIf,WAAW,EAAE,oBAAOV,OAAA;IAAIoB,SAAS,EAAC,YAAY;IAAAC,QAAA,EAAEX,WAAW,CAACgB,OAAO,IAAI;EAAe;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAEhG,oBACIzB,OAAA;IAAKoB,SAAS,EAAC,WAAW;IAAAC,QAAA,EACrBb,SAAS,CAACmB,GAAG,CAAC,CAACC,CAAC,EAAEd,KAAK,kBACpBd,OAAA;MAAiBoB,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBAC3CrB,OAAA;QAAIoB,SAAS,EAAC,YAAY;QAAAC,QAAA,GAAC,WAAS,EAACP,KAAK,GAAG,CAAC;MAAA;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACpDzB,OAAA;QACI6B,IAAI,EAAC,MAAM;QACXZ,KAAK,EAAEW,CAAC,CAACE,QAAS;QAClBd,IAAI,EAAG,WAAUF,KAAM,EAAE;QACzBiB,QAAQ,EAAGhB,CAAC,IAAKF,iBAAiB,CAACC,KAAK,EAAEC,CAAC,CAAE;QAC7CiB,WAAW,EAAC,gBAAgB;QAC5BZ,SAAS,EAAC;MAAgB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,eACFzB,OAAA;QAAAqB,QAAA,EACKO,CAAC,CAACK,OAAO,CAACN,GAAG,CAAC,CAACO,MAAM,EAAEC,CAAC,kBACrBnC,OAAA;UAAAqB,QAAA,eACIrB,OAAA;YACI6B,IAAI,EAAC,MAAM;YACXZ,KAAK,EAAEiB,MAAO;YACdlB,IAAI,EAAG,SAAQF,KAAM,IAAGqB,CAAE,EAAE;YAC5BJ,QAAQ,EAAGhB,CAAC,IAAKF,iBAAiB,CAACC,KAAK,EAAEC,CAAC,CAAE;YAC7CiB,WAAW,EAAG,gBAAeG,CAAC,GAAG,CAAE,EAAE;YACrCf,SAAS,EAAC;UAAc;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3B;QAAC,GARGU,CAAC;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OASN,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA,GAvBCX,KAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAwBV,CACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACtB,EAAA,CArDuBF,SAAS;EAAA,QAEXL,WAAW,EACQC,gBAAgB,EACnCD,WAAW,EAEZD,WAAW;AAAA;AAAAyC,EAAA,GANRnC,SAAS;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}