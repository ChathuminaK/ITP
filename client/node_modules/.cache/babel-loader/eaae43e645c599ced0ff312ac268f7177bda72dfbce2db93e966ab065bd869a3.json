{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pahan\\\\my-project-app\\\\client1\\\\src\\\\components\\\\ResultEdit.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getServerData, postServerData } from '../helper/helper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ResultEdit() {\n  _s();\n  const [results, setResults] = useState([]);\n  const [editedResults, setEditedResults] = useState([]);\n\n  // Fetch existing results from the database\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const data = await getServerData('http://localhost:5000/api/result');\n        setResults(data);\n        setEditedResults(data); // Initialize editedResults with fetched data\n      } catch (error) {\n        console.error('Error fetching results:', error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Handle changes to edited results\n  const handleEdit = (index, field, value) => {\n    const updatedResults = [...editedResults];\n    updatedResults[index][field] = value;\n    setEditedResults(updatedResults);\n  };\n\n  // Save edited results to the database\n  const saveEditedResults = async () => {\n    try {\n      await postServerData('http://localhost:5000/api/result', editedResults);\n      // Optionally, update state or show a success message\n    } catch (error) {\n      console.error('Error saving edited results:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [results.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: editedResults[index].username,\n        onChange: e => handleEdit(index, 'username', e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: saveEditedResults,\n      children: \"Save Edited Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n_s(ResultEdit, \"kLvPcDcA0KV6jSHnacMZil5lH7w=\");\n_c = ResultEdit;\nvar _c;\n$RefreshReg$(_c, \"ResultEdit\");","map":{"version":3,"names":["React","useState","useEffect","getServerData","postServerData","jsxDEV","_jsxDEV","ResultEdit","_s","results","setResults","editedResults","setEditedResults","fetchData","data","error","console","handleEdit","index","field","value","updatedResults","saveEditedResults","children","map","result","type","username","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Pahan/my-project-app/client1/src/components/ResultEdit.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getServerData, postServerData } from '../helper/helper';\r\n\r\nexport default function ResultEdit() {\r\n    const [results, setResults] = useState([]);\r\n    const [editedResults, setEditedResults] = useState([]);\r\n\r\n    // Fetch existing results from the database\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const data = await getServerData('http://localhost:5000/api/result');\r\n                setResults(data);\r\n                setEditedResults(data); // Initialize editedResults with fetched data\r\n            } catch (error) {\r\n                console.error('Error fetching results:', error);\r\n            }\r\n        };\r\n        fetchData();\r\n    }, []);\r\n\r\n    // Handle changes to edited results\r\n    const handleEdit = (index, field, value) => {\r\n        const updatedResults = [...editedResults];\r\n        updatedResults[index][field] = value;\r\n        setEditedResults(updatedResults);\r\n    };\r\n\r\n    // Save edited results to the database\r\n    const saveEditedResults = async () => {\r\n        try {\r\n            await postServerData('http://localhost:5000/api/result', editedResults);\r\n            // Optionally, update state or show a success message\r\n        } catch (error) {\r\n            console.error('Error saving edited results:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {/* Display existing results and editing interface */}\r\n            {results.map((result, index) => (\r\n                <div key={index}>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={editedResults[index].username}\r\n                        onChange={(e) => handleEdit(index, 'username', e.target.value)}\r\n                    />\r\n                    {/* Add more input fields for other result fields */}\r\n                </div>\r\n            ))}\r\n            {/* Button to save edited results */}\r\n            <button onClick={saveEditedResults}>Save Edited Results</button>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,aAAa,EAAEC,cAAc,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjE,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;;EAEtD;EACAC,SAAS,CAAC,MAAM;IACZ,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,IAAI,GAAG,MAAMX,aAAa,CAAC,kCAAkC,CAAC;QACpEO,UAAU,CAACI,IAAI,CAAC;QAChBF,gBAAgB,CAACE,IAAI,CAAC,CAAC,CAAC;MAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACnD;IACJ,CAAC;IACDF,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMI,UAAU,GAAGA,CAACC,KAAK,EAAEC,KAAK,EAAEC,KAAK,KAAK;IACxC,MAAMC,cAAc,GAAG,CAAC,GAAGV,aAAa,CAAC;IACzCU,cAAc,CAACH,KAAK,CAAC,CAACC,KAAK,CAAC,GAAGC,KAAK;IACpCR,gBAAgB,CAACS,cAAc,CAAC;EACpC,CAAC;;EAED;EACA,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACA,MAAMlB,cAAc,CAAC,kCAAkC,EAAEO,aAAa,CAAC;MACvE;IACJ,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACxD;EACJ,CAAC;EAED,oBACIT,OAAA;IAAAiB,QAAA,GAEKd,OAAO,CAACe,GAAG,CAAC,CAACC,MAAM,EAAEP,KAAK,kBACvBZ,OAAA;MAAAiB,QAAA,eACIjB,OAAA;QACIoB,IAAI,EAAC,MAAM;QACXN,KAAK,EAAET,aAAa,CAACO,KAAK,CAAC,CAACS,QAAS;QACrCC,QAAQ,EAAGC,CAAC,IAAKZ,UAAU,CAACC,KAAK,EAAE,UAAU,EAAEW,CAAC,CAACC,MAAM,CAACV,KAAK;MAAE;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClE;IAAC,GALIhB,KAAK;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOV,CACR,CAAC,eAEF5B,OAAA;MAAQ6B,OAAO,EAAEb,iBAAkB;MAAAC,QAAA,EAAC;IAAmB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/D,CAAC;AAEd;AAAC1B,EAAA,CApDuBD,UAAU;AAAA6B,EAAA,GAAV7B,UAAU;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}