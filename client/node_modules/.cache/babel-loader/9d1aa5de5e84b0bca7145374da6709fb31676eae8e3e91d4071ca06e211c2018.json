{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pahan\\\\main\\\\client\\\\src\\\\Components\\\\Daily Process Dashboard\\\\pages\\\\AdminDetails.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n\n// //api functions\n// import { view, deleteAdmin } from \"../api/admin\";\n\n// const AdminDetails = () => {\n//     const [admins, setAdmins] = useState([]);\n//     const navigate = useNavigate();\n\n//     // Fetch admins\n//     useEffect(() => {\n//         const fetchAdmins = async () => {\n//             try {\n//                 const res = await view();\n//                 setAdmins(res.admins);\n//             } catch (error) {\n//                 console.error(\"Failed to fetch admins:\", error.message);\n//             }\n//         };\n//         fetchAdmins();\n//     }, []);\n\n//     const handleEditDetails = (adminID) => {\n\n//         navigate(`/adminEdit/${adminID}`);\n//     };\n\n//     const handleDeleteAdmin = async (adminID) => {\n//         const confirmDelete = window.confirm(\"Are you sure you want to delete this admin account?\");\n//         if (confirmDelete) {\n//             try {\n//                 await deleteAdmin(adminID);\n//                 setAdmins(admins.filter(admin => admin._id !== adminID));\n//                 alert(\"Admin account deleted successfully\");\n//             } catch (error) {\n//                 console.error(\"Failed to delete admin account:\", error.message);\n//                 alert(\"Failed to delete admin account\");\n//             }\n//         }\n//     };\n\n//     var num = 0;\n\n//     return (\n//         <div className=\"container mt-5 text-center\">\n//             <h1 className=\"text-center mb-4\">Admin Details</h1>\n//             <table className=\"table table-striped table-bordered table-success\">\n//                 <thead>\n//                     <tr className=\"table-primary\">\n//                         <th>#</th>\n//                         <th className=\"col-2\">First Name</th>\n//                         <th className=\"col-2\">Last Name</th>\n//                         <th className=\"col-2\">Username</th>\n//                         <th className=\"col-2\">Email</th>\n//                         <th className=\"col-2\">Contact</th>\n//                         <th>Action</th>\n//                     </tr>\n//                 </thead>\n//                 <tbody>\n//                     {admins.map((admin, index) => (\n//                         <tr key={index}>\n//                             <td>{++num}</td>\n//                             <td>{admin.fName}</td>\n//                             <td>{admin.lName}</td>\n//                             <td>{admin.username}</td>\n//                             <td>{admin.email}</td>\n//                             <td>0{admin.contact}</td>\n//                             <td>\n//                                 <button\n//                                     onClick={() => handleEditDetails(admin._id)}\n//                                     className=\"btn btn-outline-primary btn-sm\"\n//                                 >\n//                                     Edit\n//                                 </button>\n//                                 <span className=\"p-2\"></span>\n//                                 <button\n//                                     onClick={() => handleDeleteAdmin(admin._id)}\n//                                     className=\"btn btn-outline-danger btn-sm\"\n//                                 >\n//                                     Delete\n//                                 </button>\n//                             </td>\n//                         </tr>\n//                     ))}\n//                 </tbody>\n//             </table>\n//         </div>\n//     );\n// };\n\n// export default AdminDetails;\n\nimport React, { useState, useEffect } from \"react\";\n//import { useNavigate } from \"react-router-dom\";\n\n// api functions\nimport { view, deleteAdmin, update } from \"../api/admin\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminDetails = () => {\n  _s();\n  const [admins, setAdmins] = useState([]);\n  const [editAdminID, setEditAdminID] = useState(null); // State to track the admin being edited\n  //const navigate = useNavigate();\n\n  // Fetch admins\n  useEffect(() => {\n    const fetchAdmins = async () => {\n      try {\n        const res = await view();\n        setAdmins(res.admins);\n      } catch (error) {\n        console.error(\"Failed to fetch admins:\", error.message);\n      }\n    };\n    fetchAdmins();\n  }, []);\n  const handleEdit = adminID => {\n    setEditAdminID(adminID);\n  };\n  const handleSave = async adminID => {\n    try {\n      // Find the admin being edited in the admins array\n      const adminToUpdate = admins.find(admin => admin._id === adminID);\n      if (!adminToUpdate) {\n        console.error(\"Admin not found for update\");\n        return;\n      }\n\n      // Update admin in the backend\n      await update(adminID, adminToUpdate);\n\n      // Clear edit mode\n      setEditAdminID(null);\n      alert(\"Admin details updated successfully!\");\n    } catch (error) {\n      console.error(\"Failed to update admin details:\", error.message);\n      alert(\"Failed to update admin details\");\n    }\n  };\n  const handleDeleteAdmin = async adminID => {\n    const confirmDelete = window.confirm(\"Are you sure you want to delete this admin account?\");\n    if (confirmDelete) {\n      try {\n        await deleteAdmin(adminID);\n        setAdmins(admins.filter(admin => admin._id !== adminID));\n        alert(\"Admin account deleted successfully\");\n      } catch (error) {\n        console.error(\"Failed to delete admin account:\", error.message);\n        alert(\"Failed to delete admin account\");\n      }\n    }\n  };\n  const handleInputChange = (e, adminID, field) => {\n    const updatedAdmins = admins.map(admin => {\n      if (admin._id === adminID) {\n        return {\n          ...admin,\n          [field]: e.target.value\n        };\n      }\n      return admin;\n    });\n    setAdmins(updatedAdmins);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AdminHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-5 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center mb-4\",\n        children: \"Admin Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-striped table-bordered table-success\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"table-primary\",\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"col\",\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"col\",\n              children: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"col\",\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"col\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"col\",\n              children: \"Contact\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: admins.map((admin, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: editAdminID === admin._id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: admin.fName,\n                onChange: e => handleInputChange(e, admin._id, \"fName\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 37\n              }, this) : admin.fName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: editAdminID === admin._id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: admin.lName,\n                onChange: e => handleInputChange(e, admin._id, \"lName\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 37\n              }, this) : admin.lName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: editAdminID === admin._id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: admin.username,\n                onChange: e => handleInputChange(e, admin._id, \"username\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 37\n              }, this) : admin.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: editAdminID === admin._id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                value: admin.email,\n                onChange: e => handleInputChange(e, admin._id, \"email\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 37\n              }, this) : admin.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"+94 \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"p-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 37\n              }, this), editAdminID === admin._id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: admin.contact,\n                onChange: e => handleInputChange(e, admin._id, \"contact\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 37\n              }, this) : admin.contact]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [editAdminID === admin._id ? /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary btn-sm\",\n                onClick: () => handleSave(admin._id),\n                disabled: !admin.fName || !admin.lName || !admin.username || !admin.email || !admin.contact || !(admin.contact >= 700000000) || !(admin.contact <= 799999999) || !(admin.contact.toString().length === 9),\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 37\n              }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-outline-primary btn-sm\",\n                onClick: () => handleEdit(admin._id),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"p-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDeleteAdmin(admin._id),\n                className: \"btn btn-outline-danger btn-sm\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 29\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminDetails, \"XTmjG0MLVG+TTx/hLKICtg3FLSE=\");\n_c = AdminDetails;\nexport default AdminDetails;\nvar _c;\n$RefreshReg$(_c, \"AdminDetails\");","map":{"version":3,"names":["React","useState","useEffect","view","deleteAdmin","update","jsxDEV","_jsxDEV","AdminDetails","_s","admins","setAdmins","editAdminID","setEditAdminID","fetchAdmins","res","error","console","message","handleEdit","adminID","handleSave","adminToUpdate","find","admin","_id","alert","handleDeleteAdmin","confirmDelete","window","confirm","filter","handleInputChange","e","field","updatedAdmins","map","target","value","children","AdminHeader","fileName","_jsxFileName","lineNumber","columnNumber","className","index","type","fName","onChange","lName","username","email","contact","onClick","disabled","toString","length","_c","$RefreshReg$"],"sources":["C:/Users/Pahan/main/client/src/Components/Daily Process Dashboard/pages/AdminDetails.jsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n\r\n// //api functions\r\n// import { view, deleteAdmin } from \"../api/admin\";\r\n\r\n// const AdminDetails = () => {\r\n//     const [admins, setAdmins] = useState([]);\r\n//     const navigate = useNavigate();\r\n\r\n//     // Fetch admins\r\n//     useEffect(() => {\r\n//         const fetchAdmins = async () => {\r\n//             try {\r\n//                 const res = await view();\r\n//                 setAdmins(res.admins);\r\n//             } catch (error) {\r\n//                 console.error(\"Failed to fetch admins:\", error.message);\r\n//             }\r\n//         };\r\n//         fetchAdmins();\r\n//     }, []);\r\n\r\n//     const handleEditDetails = (adminID) => {\r\n\r\n//         navigate(`/adminEdit/${adminID}`);\r\n//     };\r\n\r\n//     const handleDeleteAdmin = async (adminID) => {\r\n//         const confirmDelete = window.confirm(\"Are you sure you want to delete this admin account?\");\r\n//         if (confirmDelete) {\r\n//             try {\r\n//                 await deleteAdmin(adminID);\r\n//                 setAdmins(admins.filter(admin => admin._id !== adminID));\r\n//                 alert(\"Admin account deleted successfully\");\r\n//             } catch (error) {\r\n//                 console.error(\"Failed to delete admin account:\", error.message);\r\n//                 alert(\"Failed to delete admin account\");\r\n//             }\r\n//         }\r\n//     };\r\n\r\n//     var num = 0;\r\n\r\n//     return (\r\n//         <div className=\"container mt-5 text-center\">\r\n//             <h1 className=\"text-center mb-4\">Admin Details</h1>\r\n//             <table className=\"table table-striped table-bordered table-success\">\r\n//                 <thead>\r\n//                     <tr className=\"table-primary\">\r\n//                         <th>#</th>\r\n//                         <th className=\"col-2\">First Name</th>\r\n//                         <th className=\"col-2\">Last Name</th>\r\n//                         <th className=\"col-2\">Username</th>\r\n//                         <th className=\"col-2\">Email</th>\r\n//                         <th className=\"col-2\">Contact</th>\r\n//                         <th>Action</th>\r\n//                     </tr>\r\n//                 </thead>\r\n//                 <tbody>\r\n//                     {admins.map((admin, index) => (\r\n//                         <tr key={index}>\r\n//                             <td>{++num}</td>\r\n//                             <td>{admin.fName}</td>\r\n//                             <td>{admin.lName}</td>\r\n//                             <td>{admin.username}</td>\r\n//                             <td>{admin.email}</td>\r\n//                             <td>0{admin.contact}</td>\r\n//                             <td>\r\n//                                 <button\r\n//                                     onClick={() => handleEditDetails(admin._id)}\r\n//                                     className=\"btn btn-outline-primary btn-sm\"\r\n//                                 >\r\n//                                     Edit\r\n//                                 </button>\r\n//                                 <span className=\"p-2\"></span>\r\n//                                 <button\r\n//                                     onClick={() => handleDeleteAdmin(admin._id)}\r\n//                                     className=\"btn btn-outline-danger btn-sm\"\r\n//                                 >\r\n//                                     Delete\r\n//                                 </button>\r\n//                             </td>\r\n//                         </tr>\r\n//                     ))}\r\n//                 </tbody>\r\n//             </table>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default AdminDetails;\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\n//import { useNavigate } from \"react-router-dom\";\r\n\r\n// api functions\r\nimport { view, deleteAdmin, update } from \"../api/admin\";\r\n\r\nconst AdminDetails = () => {\r\n    const [admins, setAdmins] = useState([]);\r\n    const [editAdminID, setEditAdminID] = useState(null); // State to track the admin being edited\r\n    //const navigate = useNavigate();\r\n\r\n    // Fetch admins\r\n    useEffect(() => {\r\n        const fetchAdmins = async () => {\r\n            try {\r\n                const res = await view();\r\n                setAdmins(res.admins);\r\n            } catch (error) {\r\n                console.error(\"Failed to fetch admins:\", error.message);\r\n            }\r\n        };\r\n        fetchAdmins();\r\n    }, []);\r\n\r\n    const handleEdit = (adminID) => {\r\n        setEditAdminID(adminID);\r\n    };\r\n\r\n    const handleSave = async (adminID) => {\r\n        try {\r\n            // Find the admin being edited in the admins array\r\n            const adminToUpdate = admins.find((admin) => admin._id === adminID);\r\n            if (!adminToUpdate) {\r\n                console.error(\"Admin not found for update\");\r\n                return;\r\n            }\r\n\r\n            // Update admin in the backend\r\n            await update(adminID, adminToUpdate);\r\n\r\n            // Clear edit mode\r\n            setEditAdminID(null);\r\n            alert(\"Admin details updated successfully!\");\r\n        } catch (error) {\r\n            console.error(\"Failed to update admin details:\", error.message);\r\n            alert(\"Failed to update admin details\");\r\n        }\r\n    };\r\n\r\n    const handleDeleteAdmin = async (adminID) => {\r\n        const confirmDelete = window.confirm(\"Are you sure you want to delete this admin account?\");\r\n        if (confirmDelete) {\r\n            try {\r\n                await deleteAdmin(adminID);\r\n                setAdmins(admins.filter((admin) => admin._id !== adminID));\r\n                alert(\"Admin account deleted successfully\");\r\n            } catch (error) {\r\n                console.error(\"Failed to delete admin account:\", error.message);\r\n                alert(\"Failed to delete admin account\");\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleInputChange = (e, adminID, field) => {\r\n        const updatedAdmins = admins.map((admin) => {\r\n            if (admin._id === adminID) {\r\n                return { ...admin, [field]: e.target.value };\r\n            }\r\n            return admin;\r\n        });\r\n        setAdmins(updatedAdmins);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n        <AdminHeader />\r\n        <div className=\"container mt-5 text-center\">\r\n            <h1 className=\"text-center mb-4\">Admin Details</h1>\r\n            <table className=\"table table-striped table-bordered table-success\">\r\n                <thead>\r\n                    <tr className=\"table-primary\">\r\n                        <th>#</th>\r\n                        <th className=\"col\">First Name</th>\r\n                        <th className=\"col\">Last Name</th>\r\n                        <th className=\"col\">Username</th>\r\n                        <th className=\"col\">Email</th>\r\n                        <th className=\"col\">Contact</th>\r\n                        <th>Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {admins.map((admin, index) => (\r\n                        <tr key={index}>\r\n                            <td>{index + 1}</td>\r\n                            <td>\r\n                                {editAdminID === admin._id ? (\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={admin.fName}\r\n                                        onChange={(e) => handleInputChange(e, admin._id, \"fName\")}\r\n                                    />\r\n                                ) : (\r\n                                    admin.fName\r\n                                )}\r\n                            </td>\r\n                            <td>\r\n                                {editAdminID === admin._id ? (\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={admin.lName}\r\n                                        onChange={(e) => handleInputChange(e, admin._id, \"lName\")}\r\n                                    />\r\n                                ) : (\r\n                                    admin.lName\r\n                                )}\r\n                            </td>\r\n                            <td>\r\n                                {editAdminID === admin._id ? (\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={admin.username}\r\n                                        onChange={(e) => handleInputChange(e, admin._id, \"username\")}\r\n                                    />\r\n                                ) : (\r\n                                    admin.username\r\n                                )}\r\n                            </td>\r\n                            <td>\r\n                                {editAdminID === admin._id ? (\r\n                                    <input\r\n                                        type=\"email\"\r\n                                        value={admin.email}\r\n                                        onChange={(e) => handleInputChange(e, admin._id, \"email\")}\r\n                                    />\r\n                                ) : (\r\n                                    admin.email\r\n                                )}\r\n                            </td>\r\n                            <td>+94 <span className=\"p-1\"></span>\r\n                                {editAdminID === admin._id ? (\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        value={admin.contact}\r\n                                        onChange={(e) => handleInputChange(e, admin._id, \"contact\")}\r\n                                    />\r\n                                ) : (\r\n                                    admin.contact\r\n                                )}\r\n                            </td>\r\n                            <td>\r\n                                {editAdminID === admin._id ? (\r\n                                    <button\r\n                                        className=\"btn btn-primary btn-sm\"\r\n                                        onClick={() => handleSave(admin._id)}\r\n                                        disabled={\r\n                                            !admin.fName\r\n                                            || !admin.lName\r\n                                            || !admin.username\r\n                                            || !admin.email\r\n                                            || !admin.contact\r\n                                            || !(admin.contact >= 700000000)\r\n                                            || !(admin.contact <= 799999999)\r\n                                            || !(admin.contact.toString().length === 9)\r\n\r\n                                        }\r\n                                    >\r\n                                        Save\r\n                                    </button>\r\n                                ) : (\r\n                                    <button\r\n                                        className=\"btn btn-outline-primary btn-sm\"\r\n                                        onClick={() => handleEdit(admin._id)}\r\n                                    >\r\n                                        Edit\r\n                                    </button>\r\n                                )}\r\n                                <span className=\"p-2\"></span>\r\n                                <button\r\n                                    onClick={() => handleDeleteAdmin(admin._id)}\r\n                                    className=\"btn btn-outline-danger btn-sm\"\r\n                                >\r\n                                    Delete\r\n                                </button>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default AdminDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}