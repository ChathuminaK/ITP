{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pahan\\\\my-project-app\\\\client1\\\\src\\\\components\\\\Questions.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport data from '../database/data';\nimport { useSelector } from 'react-redux';\n\n//custom hook\nimport { useFetchQuestion } from '../hooks/FetchQuestion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Questions() {\n  _s();\n  const [checked, setChecked] = useState(undefined);\n  const [{\n    isLoading,\n    apiData,\n    serverError\n  }] = useFetchQuestion();\n  const question = data[0];\n  const questions = useSelector(state => state.questions.queue[state.questions.trace]);\n  const trace = useSelector(state => state.questions.trace);\n  useEffect(() => {\n    console.log(questions);\n  });\n  function onSelect() {\n    //console.log('radio button change')\n  }\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"h3\", {\n    className: \"text-light\",\n    children: \"isLoading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 26\n  }, this);\n  if (serverError) return /*#__PURE__*/_jsxDEV(\"h3\", {\n    className: \"text-light\",\n    children: serverError || \"Unknown Error\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 28\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"questions\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-light\",\n      children: questions === null || questions === void 0 ? void 0 : questions.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: questions === null || questions === void 0 ? void 0 : questions.options.map((q, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: false,\n          name: \"options\",\n          id: `q${i}-option`,\n          onChange: onSelect()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"text-primary\",\n          htmlFor: `q${i}-option`,\n          children: q\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"check\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this))\n    }, questions === null || questions === void 0 ? void 0 : questions.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_s(Questions, \"lEYWHhgxGidQsyubukvf7dnJxEA=\", false, function () {\n  return [useFetchQuestion, useSelector, useSelector];\n});\n_c = Questions;\nvar _c;\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"names":["React","useEffect","useState","data","useSelector","useFetchQuestion","jsxDEV","_jsxDEV","Questions","_s","checked","setChecked","undefined","isLoading","apiData","serverError","question","questions","state","queue","trace","console","log","onSelect","className","children","fileName","_jsxFileName","lineNumber","columnNumber","options","map","q","i","type","value","name","id","onChange","htmlFor","_c","$RefreshReg$"],"sources":["C:/Users/Pahan/my-project-app/client1/src/components/Questions.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport data from '../database/data'\r\n\r\nimport { useSelector } from 'react-redux'\r\n\r\n//custom hook\r\nimport { useFetchQuestion } from '../hooks/FetchQuestion'\r\n\r\nexport default function Questions(){\r\n\r\n    const [checked, setChecked] = useState(undefined)\r\n    const [{ isLoading, apiData, serverError }] = useFetchQuestion()\r\n    const question = data[0]\r\n\r\n    const questions = useSelector(state => state.questions.queue[state.questions.trace])\r\n    const trace = useSelector(state => state.questions.trace)\r\n\r\n    useEffect(()=>{\r\n         console.log(questions)\r\n    })\r\n\r\n    function onSelect(){\r\n        //console.log('radio button change')\r\n    }\r\n\r\n    if(isLoading) return <h3 className='text-light'>isLoading</h3>\r\n    if(serverError) return <h3 className='text-light'>{serverError || \"Unknown Error\"}</h3>\r\n\r\n    return(\r\n        <div className='questions'>\r\n            <h2 className='text-light'>{questions?.question}</h2>\r\n\r\n            <ul key={questions?.id}>\r\n                {\r\n                    questions?.options.map((q,i) => (\r\n                    <li key={i}>\r\n                        <input \r\n                            type=\"radio\"\r\n                            value={false}\r\n                            name=\"options\"\r\n                            id={`q${i}-option`}\r\n                            onChange={onSelect()}>\r\n    \r\n                        </input>\r\n                        <label className='text-primary' htmlFor={`q${i}-option`}>{q}</label>\r\n                        <div className='check'></div>\r\n                    </li>\r\n                    ))\r\n                }\r\n            </ul>\r\n        </div>\r\n    )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}