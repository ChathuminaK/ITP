{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pahan\\\\my-project-app\\\\client1\\\\src\\\\components\\\\EditQuestion.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\n// Custom hooks\nimport { useFetchQuestion } from '../hooks/FetchQuestion';\nimport { updateResult } from '../hooks/setResult';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Questions() {\n  _s();\n  const [answers, setAnswers] = useState([]);\n  const {\n    trace\n  } = useSelector(state => state.questions);\n  const result = useSelector(state => state.result.result);\n  const [{\n    isLoading,\n    apiData,\n    serverError\n  }] = useFetchQuestion();\n  const questions = useSelector(state => state.questions.queue[state.questions.trace]);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(updateResult({\n      trace,\n      answers\n    }));\n  }, [answers]);\n  function onAnswerChange(index, event) {\n    const newAnswers = [...answers];\n    newAnswers[index] = event.target.value;\n    setAnswers(newAnswers);\n  }\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"h3\", {\n    className: \"text-light\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 27\n  }, this);\n  if (serverError) return /*#__PURE__*/_jsxDEV(\"h3\", {\n    className: \"text-light\",\n    children: serverError.message || \"Unknown Error\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 29\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"questions\",\n    children: questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-light\",\n        children: question.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: question.options.map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"text-primary\",\n            htmlFor: `answer-${index}-${optionIndex}`,\n            children: option\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: `answer-${index}-${optionIndex}`,\n            value: answers[index] || '',\n            onChange: e => onAnswerChange(index, e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 33\n          }, this)]\n        }, optionIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_s(Questions, \"abv+iIaiygmv8AU9vq+wSEGOwzc=\", false, function () {\n  return [useSelector, useSelector, useFetchQuestion, useSelector, useDispatch];\n});\n_c = Questions;\nvar _c;\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","useFetchQuestion","updateResult","jsxDEV","_jsxDEV","Questions","_s","answers","setAnswers","trace","state","questions","result","isLoading","apiData","serverError","queue","dispatch","onAnswerChange","index","event","newAnswers","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","message","map","question","options","option","optionIndex","htmlFor","type","id","onChange","e","_c","$RefreshReg$"],"sources":["C:/Users/Pahan/my-project-app/client1/src/components/EditQuestion.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n// Custom hooks\r\nimport { useFetchQuestion } from '../hooks/FetchQuestion';\r\nimport { updateResult } from '../hooks/setResult';\r\n\r\nexport default function Questions() {\r\n    const [answers, setAnswers] = useState([]);\r\n    const { trace } = useSelector(state => state.questions);\r\n    const result = useSelector(state => state.result.result);\r\n    const [{ isLoading, apiData, serverError }] = useFetchQuestion();\r\n    const questions = useSelector(state => state.questions.queue[state.questions.trace]);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(updateResult({ trace, answers }));\r\n    }, [answers]);\r\n\r\n    function onAnswerChange(index, event) {\r\n        const newAnswers = [...answers];\r\n        newAnswers[index] = event.target.value;\r\n        setAnswers(newAnswers);\r\n    }\r\n\r\n    if (isLoading) return <h3 className='text-light'>Loading...</h3>;\r\n    if (serverError) return <h3 className='text-light'>{serverError.message || \"Unknown Error\"}</h3>;\r\n\r\n    return (\r\n        <div className='questions'>\r\n            {questions.map((question, index) => (\r\n                <div key={index}>\r\n                    <h2 className='text-light'>{question.question}</h2>\r\n                    <ul>\r\n                        {question.options.map((option, optionIndex) => (\r\n                            <li key={optionIndex}>\r\n                                <label className='text-primary' htmlFor={`answer-${index}-${optionIndex}`}>{option}</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    id={`answer-${index}-${optionIndex}`}\r\n                                    value={answers[index] || ''}\r\n                                    onChange={(e) => onAnswerChange(index, e)}\r\n                                />\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;;AAEtD;AACA,SAASC,gBAAgB,QAAQ,wBAAwB;AACzD,SAASC,YAAY,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM;IAAEW;EAAM,CAAC,GAAGT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACC,SAAS,CAAC;EACvD,MAAMC,MAAM,GAAGZ,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACE,MAAM,CAACA,MAAM,CAAC;EACxD,MAAM,CAAC;IAAEC,SAAS;IAAEC,OAAO;IAAEC;EAAY,CAAC,CAAC,GAAGd,gBAAgB,CAAC,CAAC;EAChE,MAAMU,SAAS,GAAGX,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACC,SAAS,CAACK,KAAK,CAACN,KAAK,CAACC,SAAS,CAACF,KAAK,CAAC,CAAC;EACpF,MAAMQ,QAAQ,GAAGlB,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACZoB,QAAQ,CAACf,YAAY,CAAC;MAAEO,KAAK;MAAEF;IAAQ,CAAC,CAAC,CAAC;EAC9C,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;EAEb,SAASW,cAAcA,CAACC,KAAK,EAAEC,KAAK,EAAE;IAClC,MAAMC,UAAU,GAAG,CAAC,GAAGd,OAAO,CAAC;IAC/Bc,UAAU,CAACF,KAAK,CAAC,GAAGC,KAAK,CAACE,MAAM,CAACC,KAAK;IACtCf,UAAU,CAACa,UAAU,CAAC;EAC1B;EAEA,IAAIR,SAAS,EAAE,oBAAOT,OAAA;IAAIoB,SAAS,EAAC,YAAY;IAAAC,QAAA,EAAC;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAChE,IAAId,WAAW,EAAE,oBAAOX,OAAA;IAAIoB,SAAS,EAAC,YAAY;IAAAC,QAAA,EAAEV,WAAW,CAACe,OAAO,IAAI;EAAe;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAEhG,oBACIzB,OAAA;IAAKoB,SAAS,EAAC,WAAW;IAAAC,QAAA,EACrBd,SAAS,CAACoB,GAAG,CAAC,CAACC,QAAQ,EAAEb,KAAK,kBAC3Bf,OAAA;MAAAqB,QAAA,gBACIrB,OAAA;QAAIoB,SAAS,EAAC,YAAY;QAAAC,QAAA,EAAEO,QAAQ,CAACA;MAAQ;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACnDzB,OAAA;QAAAqB,QAAA,EACKO,QAAQ,CAACC,OAAO,CAACF,GAAG,CAAC,CAACG,MAAM,EAAEC,WAAW,kBACtC/B,OAAA;UAAAqB,QAAA,gBACIrB,OAAA;YAAOoB,SAAS,EAAC,cAAc;YAACY,OAAO,EAAG,UAASjB,KAAM,IAAGgB,WAAY,EAAE;YAAAV,QAAA,EAAES;UAAM;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC3FzB,OAAA;YACIiC,IAAI,EAAC,MAAM;YACXC,EAAE,EAAG,UAASnB,KAAM,IAAGgB,WAAY,EAAE;YACrCZ,KAAK,EAAEhB,OAAO,CAACY,KAAK,CAAC,IAAI,EAAG;YAC5BoB,QAAQ,EAAGC,CAAC,IAAKtB,cAAc,CAACC,KAAK,EAAEqB,CAAC;UAAE;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7C,CAAC;QAAA,GAPGM,WAAW;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAQhB,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA,GAdCV,KAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAeV,CACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACvB,EAAA,CA3CuBD,SAAS;EAAA,QAEXL,WAAW,EACdA,WAAW,EACoBC,gBAAgB,EAC5CD,WAAW,EACZD,WAAW;AAAA;AAAA0C,EAAA,GANRpC,SAAS;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}