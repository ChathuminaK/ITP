{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pahan\\\\my-project-app\\\\client1\\\\src\\\\components\\\\Test.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getServerData, putServerData } from '../helper/helper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditableResultView() {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    getServerData('http://localhost:5000/api/result', res => {\n      setData(res);\n    });\n  }, []);\n  const handleInputChange = (index, field, value) => {\n    // Update the data state with the modified value\n    const updatedData = [...data];\n    updatedData[index][field] = value;\n    setData(updatedData);\n  };\n  const handleSaveResult = async index => {\n    try {\n      const editedResult = data[index];\n      await putServerData('http://localhost:5000/api/result', editedResult);\n      console.log('Result updated successfully');\n    } catch (error) {\n      console.error('Error updating result:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"editable-result-view\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Editable Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), data.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No results found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.map((result, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: result.username,\n          onChange: e => handleInputChange(index, 'username', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Attempts:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: result.attempts,\n          onChange: e => handleInputChange(index, 'attempts', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Marks:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: result.points,\n          onChange: e => handleInputChange(index, 'points', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Result:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: result.achieved,\n          onChange: e => handleInputChange(index, 'achieved', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleSaveResult(index),\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_s(EditableResultView, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = EditableResultView;\nvar _c;\n$RefreshReg$(_c, \"EditableResultView\");","map":{"version":3,"names":["React","useState","useEffect","getServerData","putServerData","jsxDEV","_jsxDEV","EditableResultView","_s","data","setData","res","handleInputChange","index","field","value","updatedData","handleSaveResult","editedResult","console","log","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","result","type","username","onChange","e","target","attempts","points","achieved","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Pahan/my-project-app/client1/src/components/Test.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getServerData, putServerData } from '../helper/helper';\r\n\r\nexport default function EditableResultView() {\r\n    const [data, setData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getServerData('http://localhost:5000/api/result', (res) => {\r\n            setData(res);\r\n        });\r\n    }, []);\r\n\r\n    const handleInputChange = (index, field, value) => {\r\n        // Update the data state with the modified value\r\n        const updatedData = [...data];\r\n        updatedData[index][field] = value;\r\n        setData(updatedData);\r\n    };\r\n\r\n    const handleSaveResult = async (index) => {\r\n        try {\r\n            const editedResult = data[index];\r\n            await putServerData('http://localhost:5000/api/result', editedResult);\r\n            console.log('Result updated successfully');\r\n        } catch (error) {\r\n            console.error('Error updating result:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"editable-result-view\">\r\n            <h2>Editable Results</h2>\r\n            {data.length === 0 ? (\r\n                <p>No results found.</p>\r\n            ) : (\r\n                <ul>\r\n                    {data.map((result, index) => (\r\n                        <li key={index}>\r\n                            <strong>Name:</strong>\r\n                            <input\r\n                                type=\"text\"\r\n                                value={result.username}\r\n                                onChange={(e) =>\r\n                                    handleInputChange(index, 'username', e.target.value)\r\n                                }\r\n                            />\r\n                            <strong>Attempts:</strong>\r\n                            <input\r\n                                type=\"number\"\r\n                                value={result.attempts}\r\n                                onChange={(e) =>\r\n                                    handleInputChange(index, 'attempts', e.target.value)\r\n                                }\r\n                            />\r\n                            <strong>Marks:</strong>\r\n                            <input\r\n                                type=\"number\"\r\n                                value={result.points}\r\n                                onChange={(e) =>\r\n                                    handleInputChange(index, 'points', e.target.value)\r\n                                }\r\n                            />\r\n                            <strong>Result:</strong>\r\n                            <input\r\n                                type=\"text\"\r\n                                value={result.achieved}\r\n                                onChange={(e) =>\r\n                                    handleInputChange(index, 'achieved', e.target.value)\r\n                                }\r\n                            />\r\n                            <button onClick={() => handleSaveResult(index)}>Save</button>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            )}\r\n        </div>\r\n    );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,aAAa,EAAEC,aAAa,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,eAAe,SAASC,kBAAkBA,CAAA,EAAG;EAAAC,EAAA;EACzC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEpCC,SAAS,CAAC,MAAM;IACZC,aAAa,CAAC,kCAAkC,EAAGQ,GAAG,IAAK;MACvDD,OAAO,CAACC,GAAG,CAAC;IAChB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,iBAAiB,GAAGA,CAACC,KAAK,EAAEC,KAAK,EAAEC,KAAK,KAAK;IAC/C;IACA,MAAMC,WAAW,GAAG,CAAC,GAAGP,IAAI,CAAC;IAC7BO,WAAW,CAACH,KAAK,CAAC,CAACC,KAAK,CAAC,GAAGC,KAAK;IACjCL,OAAO,CAACM,WAAW,CAAC;EACxB,CAAC;EAED,MAAMC,gBAAgB,GAAG,MAAOJ,KAAK,IAAK;IACtC,IAAI;MACA,MAAMK,YAAY,GAAGT,IAAI,CAACI,KAAK,CAAC;MAChC,MAAMT,aAAa,CAAC,kCAAkC,EAAEc,YAAY,CAAC;MACrEC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAC9C,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZF,OAAO,CAACE,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAClD;EACJ,CAAC;EAED,oBACIf,OAAA;IAAKgB,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBACjCjB,OAAA;MAAAiB,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACxBlB,IAAI,CAACmB,MAAM,KAAK,CAAC,gBACdtB,OAAA;MAAAiB,QAAA,EAAG;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAExBrB,OAAA;MAAAiB,QAAA,EACKd,IAAI,CAACoB,GAAG,CAAC,CAACC,MAAM,EAAEjB,KAAK,kBACpBP,OAAA;QAAAiB,QAAA,gBACIjB,OAAA;UAAAiB,QAAA,EAAQ;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACtBrB,OAAA;UACIyB,IAAI,EAAC,MAAM;UACXhB,KAAK,EAAEe,MAAM,CAACE,QAAS;UACvBC,QAAQ,EAAGC,CAAC,IACRtB,iBAAiB,CAACC,KAAK,EAAE,UAAU,EAAEqB,CAAC,CAACC,MAAM,CAACpB,KAAK;QACtD;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eACFrB,OAAA;UAAAiB,QAAA,EAAQ;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC1BrB,OAAA;UACIyB,IAAI,EAAC,QAAQ;UACbhB,KAAK,EAAEe,MAAM,CAACM,QAAS;UACvBH,QAAQ,EAAGC,CAAC,IACRtB,iBAAiB,CAACC,KAAK,EAAE,UAAU,EAAEqB,CAAC,CAACC,MAAM,CAACpB,KAAK;QACtD;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eACFrB,OAAA;UAAAiB,QAAA,EAAQ;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACvBrB,OAAA;UACIyB,IAAI,EAAC,QAAQ;UACbhB,KAAK,EAAEe,MAAM,CAACO,MAAO;UACrBJ,QAAQ,EAAGC,CAAC,IACRtB,iBAAiB,CAACC,KAAK,EAAE,QAAQ,EAAEqB,CAAC,CAACC,MAAM,CAACpB,KAAK;QACpD;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eACFrB,OAAA;UAAAiB,QAAA,EAAQ;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACxBrB,OAAA;UACIyB,IAAI,EAAC,MAAM;UACXhB,KAAK,EAAEe,MAAM,CAACQ,QAAS;UACvBL,QAAQ,EAAGC,CAAC,IACRtB,iBAAiB,CAACC,KAAK,EAAE,UAAU,EAAEqB,CAAC,CAACC,MAAM,CAACpB,KAAK;QACtD;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eACFrB,OAAA;UAAQiC,OAAO,EAAEA,CAAA,KAAMtB,gBAAgB,CAACJ,KAAK,CAAE;UAAAU,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAjCxDd,KAAK;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAkCV,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACP;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACnB,EAAA,CA1EuBD,kBAAkB;AAAAiC,EAAA,GAAlBjC,kBAAkB;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}